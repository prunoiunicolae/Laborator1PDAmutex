#include <iostream>
#include <chrono>
#include <thread>
#include <mutex>
#include <queue>
using namespace std;

queue <int> coada;
int item, n=10, i;
mutex mutecs;

void producator(){

    while(true){
        item = rand()%1000;
        cout <<"Push no. "<<item<<" \n";
        this_thread::sleep_for(chrono::seconds(2));
        mutecs.lock();

        if(coada.size() < n)
           coada.push(item);

        mutecs.unlock();
    }

}
void consumator(){
    while(true){
       mutecs.lock();

       if(coada.size() > 0)
            coada.pop();

        mutecs.unlock();
        cout <<"Pop \n";
        this_thread::sleep_for(chrono::seconds(2));
    }

}

int main(){

    for(i = 0;i<5;i++){
        item = rand()%1000;
        cout <<"Push no. "<<item<<"\n";
        coada.push(item);
    }

    thread t1(producator);
    thread t2(consumator);

    t1.join();
    t2.join();
}
